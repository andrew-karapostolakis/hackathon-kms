/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hackathon.kms;

import TurtleGraphics.StandardPen;
import java.awt.Color;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Steven
 */
public class vec extends javax.swing.JFrame {
    public static DecimalFormat smoll = new DecimalFormat("##.##");
    public static double X1;
    public static double Y1;
    
    public static double X2;
    public static double Y2;
    /**
     * Creates new form vec
     */
    public vec() {
        initComponents();
        setResizable(false);//window is not resizable
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        txtEX = new javax.swing.JTextField();
        lblVector1 = new javax.swing.JLabel();
        lblEndY = new javax.swing.JLabel();
        lblEndX = new javax.swing.JLabel();
        txtEY = new javax.swing.JTextField();
        txtEY2 = new javax.swing.JTextField();
        txtEX2 = new javax.swing.JTextField();
        lblVector2 = new javax.swing.JLabel();
        lblEndY1 = new javax.swing.JLabel();
        lblEndX1 = new javax.swing.JLabel();
        btnDot = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblElephant = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSubtract = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vector Calculator");
        setLocation(new java.awt.Point(500, 250));

        btnExit.setText("Return");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Vectors");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblVector1.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        lblVector1.setText("Vector 1");

        lblEndY.setText("End Y");

        lblEndX.setText("End X");

        lblVector2.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        lblVector2.setText("Vector 2");

        lblEndY1.setText("End Y");

        lblEndX1.setText("End X");

        btnDot.setText("Dot Product");
        btnDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDotActionPerformed(evt);
            }
        });

        jLabel1.setText("**Vectors are added tail to tail, with both tails @ (0,0)");

        lblElephant.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        lblElephant.setText("Vector Calculator");

        jLabel2.setText("*Vectors will be drawn in a 10:1 ratio");

        btnSubtract.setText("Subtract Vectors");
        btnSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubtractActionPerformed(evt);
            }
        });

        jLabel3.setText("(Red)");

        jLabel4.setText("(Orange)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(lblElephant)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblEndX)
                                .addComponent(txtEX)
                                .addComponent(lblEndX1)
                                .addComponent(txtEX2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(33, 33, 33)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblEndY)
                                .addComponent(txtEY)
                                .addComponent(txtEY2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblEndY1)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblVector2)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel4))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblVector1)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel3))))
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblElephant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVector1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndX)
                    .addComponent(lblEndY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVector2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndX1)
                    .addComponent(lblEndY1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnSubtract)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDot)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExit)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        menu obj = new menu();
        this.setVisible(false);
        obj.setVisible(true);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        StandardPen p = new StandardPen(400, 400);//400 by 400 canvas

        //Get the point on the first vector
        X1 = Integer.parseInt(txtEX.getText());
        Y1 = Integer.parseInt(txtEY.getText());
        
        //Get the point on the second vector
        X2 = Integer.parseInt(txtEX2.getText());
        Y2 = Integer.parseInt(txtEY2.getText());
        
        //Get the X and Y-pos of the sum vector
        double totalX = X1 + X2;
        double totalY = Y1 + Y2;
        
        //Calculate the magnitude of the sum vector
        double vecMag = Math.pow(totalX, 2) + Math.pow(totalY, 2);
        vecMag = Math.sqrt(vecMag);
        
        //Draw the first vector
        p.setColor(Color.red);
        p.up();
        p.move(0, 0);
        p.down();
        p.move(X1 * 10, Y1 * 10);
        
        //Draw the second vector
        p.setColor(Color.orange);
        p.up();
        p.move(0, 0);
        p.down();
        p.move(X2 * 10, Y2 * 10);
        
        //Draw the sum vector
        p.setColor(Color.green);
        p.up();
        p.move(0, 0);
        p.down();
        p.move(totalX * 10, totalY * 10);
        
        JOptionPane.showMessageDialog(null, "Adding the two given vectors gives a new vector with a magnitude of "
        + smoll.format(vecMag) + "\nThis new vector's known point is: (" + totalX + "," + totalY
                + ")\nThe sum vector is drawn in green.", "Vector Addition!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDotActionPerformed
        StandardPen p = new StandardPen(400, 400);//400 by 400 canvas

        //Get the point on the first vector
        X1 = Integer.parseInt(txtEX.getText());
        Y1 = Integer.parseInt(txtEY.getText());
        //Get magnitude of first vector
        double mag1 = Math.sqrt(Math.pow(X1,2) + Math.pow(Y1,2));
        
        //Get the point on the second vector
        X2 = Integer.parseInt(txtEX2.getText());
        Y2 = Integer.parseInt(txtEY2.getText());
        //Get magnitude of second vector
        double mag2 = Math.sqrt(Math.pow(X2,2) + Math.pow(Y2,2));
        
        
        //Get the dot product
        double dot = (X1 * X2) + (Y1 * Y2);
        
        //Draw the first vector
        p.setColor(Color.red);
        p.up();
        p.move(0, 0);
        p.down();
        p.move(X1 * 10, Y1 * 10);
        
        //Draw the second vector
        p.setColor(Color.orange);
        p.up();
        p.move(0, 0);
        p.down();
        p.move(X2 * 10, Y2 * 10);
        
        JOptionPane.showMessageDialog(null, "The dot product of the two vectors is "
        + smoll.format(dot), "Dot Product!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnDotActionPerformed

    private void btnSubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubtractActionPerformed
        StandardPen p = new StandardPen(400, 400);//400 by 400 canvas

        //Get the point on the first vector
        X1 = Integer.parseInt(txtEX.getText());
        Y1 = Integer.parseInt(txtEY.getText());
        
        //Get the point on the second vector
        X2 = Integer.parseInt(txtEX2.getText());
        Y2 = Integer.parseInt(txtEY2.getText());
        
        //Get the X and Y-pos of the sum vector
        double totalX = X1 - X2;
        double totalY = Y1 - Y2;
        
        //Calculate the magnitude of the sum vector
        double vecMag = Math.pow(totalX, 2) + Math.pow(totalY, 2);
        vecMag = Math.sqrt(vecMag);
        
        //Draw the first vector
        p.setColor(Color.red);
        p.up();
        p.move(0, 0);
        p.down();
        p.move(X1 * 10, Y1 * 10);
        
        //Draw the second vector
        p.setColor(Color.orange);
        p.up();
        p.move(0, 0);
        p.down();
        p.move(X2 * 10, Y2 * 10);
        
        //Draw the difference vector
        p.setColor(Color.green);
        p.up();
        p.move(0, 0);
        p.down();
        p.move(totalX * 10, totalY * 10);
        
        JOptionPane.showMessageDialog(null, "Subtracting the two given vectors gives a new vector with a magnitude of "
        + smoll.format(vecMag) + "This new vector's known point is: (" + totalX + "," + totalY
                + ")\nThe difference vector is drawn in green.", "Vector Subtraction!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSubtractActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //instantiate the main window
                vec windowFrame = new vec();
                //make sure it can be seen
                windowFrame.setVisible(true);
                new vec().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDot;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSubtract;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblElephant;
    private javax.swing.JLabel lblEndX;
    private javax.swing.JLabel lblEndX1;
    private javax.swing.JLabel lblEndY;
    private javax.swing.JLabel lblEndY1;
    private javax.swing.JLabel lblVector1;
    private javax.swing.JLabel lblVector2;
    private javax.swing.JTextField txtEX;
    private javax.swing.JTextField txtEX2;
    private javax.swing.JTextField txtEY;
    private javax.swing.JTextField txtEY2;
    // End of variables declaration//GEN-END:variables
}
