/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hackathon.kms;

import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author seega
 */

public class forcesEQ extends javax.swing.JFrame{
private Timer t;
    /**
     * Creates new form forcesEQ
     */
    
    public final static int ONE_SECOND = 1000;
    
    public forcesEQ() {
        initComponents();   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        forceGravity = new javax.swing.JButton();
        fMA = new javax.swing.JButton();
        massInput = new javax.swing.JTextField();
        accelerationInput = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        massOne = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        massTwo = new javax.swing.JTextField();
        radius = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        gravityField = new javax.swing.JButton();
        massInput1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        radiusGFC = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(500, 250));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        forceGravity.setText("Gravitational Force");
        forceGravity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forceGravityActionPerformed(evt);
            }
        });
        getContentPane().add(forceGravity, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 236, 50));

        fMA.setText("F=ma");
        fMA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fMAActionPerformed(evt);
            }
        });
        getContentPane().add(fMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 13, 235, 50));

        massInput.setToolTipText("Mass (kg)");
        massInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massInputActionPerformed(evt);
            }
        });
        getContentPane().add(massInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 76, 152, -1));

        accelerationInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accelerationInputActionPerformed(evt);
            }
        });
        getContentPane().add(accelerationInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 105, 152, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 261, 102, 45));

        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Mass of Object 1 (kg)");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, -1));

        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Mass of Object 2 (kg)");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, -1));
        getContentPane().add(massOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 98, -1));

        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("<html>Distance between<br>the centres of<br> the objects(m)</html>");
        jLabel7.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, 102, 42));
        getContentPane().add(massTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 98, -1));
        getContentPane().add(radius, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, 98, -1));

        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Mass (kg)");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("<html>Acceleration<br>(m/s*s)</html>");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 108, -1, -1));

        gravityField.setText("Gravitational Field Constant");
        gravityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gravityFieldActionPerformed(evt);
            }
        });
        getContentPane().add(gravityField, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 180, 235, 48));

        massInput1.setToolTipText("Mass (kg)");
        massInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massInput1ActionPerformed(evt);
            }
        });
        getContentPane().add(massInput1, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 235, 152, -1));

        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Mass (kg)");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 238, -1, -1));

        radiusGFC.setToolTipText("Mass (kg)");
        radiusGFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiusGFCActionPerformed(evt);
            }
        });
        getContentPane().add(radiusGFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 264, 152, -1));

        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Radius (m)");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 267, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hackathon/kms/black_hole.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fMAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fMAActionPerformed
        double mass = Double.parseDouble(massInput.getText());
        double acceleration = Double.parseDouble(accelerationInput.getText());
        double force = mass * acceleration;
        
        for (int i = 0; i < 100; i++){
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            try {
                Thread.sleep(5);
            } catch(InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        JOptionPane.showMessageDialog(null, "The force is: " + force + "N.");
    }//GEN-LAST:event_fMAActionPerformed

    private void massInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_massInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_massInputActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        menu obj = new menu();
        this.setVisible(false);
        obj.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void forceGravityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forceGravityActionPerformed
        double gravitationForce = 6.67408*Math.pow(10, -11);
        double mass1 = Double.parseDouble(massOne.getText());
        double mass2 = Double.parseDouble(massTwo.getText());
        double distance = Double.parseDouble(radius.getText());
        double forceOfGravity = (gravitationForce * mass1 * mass2) / (Math.pow(distance, 2));
        JOptionPane.showMessageDialog(null, "The force of gravity between the two objects is: " + forceOfGravity + "N.");
    }//GEN-LAST:event_forceGravityActionPerformed

    private void accelerationInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accelerationInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accelerationInputActionPerformed

    private void gravityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravityFieldActionPerformed
        double mass = Double.parseDouble(massInput1.getText());
        double radius = Double.parseDouble(radiusGFC.getText());
        double gravitationForce = 6.67408*Math.pow(10, -11);
        double gravityFieldForce = (gravitationForce * mass) / Math.pow(radius, 2);
        JOptionPane.showMessageDialog(null, "The gravitational field strength is " + gravityFieldForce + "N.");
    }//GEN-LAST:event_gravityFieldActionPerformed

    private void massInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_massInput1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_massInput1ActionPerformed

    private void radiusGFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiusGFCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiusGFCActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(forcesEQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(forcesEQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(forcesEQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(forcesEQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new forcesEQ().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accelerationInput;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton fMA;
    private javax.swing.JButton forceGravity;
    private javax.swing.JButton gravityField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField massInput;
    private javax.swing.JTextField massInput1;
    private javax.swing.JTextField massOne;
    private javax.swing.JTextField massTwo;
    private javax.swing.JTextField radius;
    private javax.swing.JTextField radiusGFC;
    // End of variables declaration//GEN-END:variables


}
